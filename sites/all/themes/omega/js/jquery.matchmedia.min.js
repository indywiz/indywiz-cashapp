/**
 * Polyfill the behavior of window.matchMedia.
 *
 * @see http://dev.w3.org/csswg/cssom-view/#widl-Window-matchMedia-MediaQueryList-DOMString-query
 *
 * Test whether a CSS media type or media query applies. Register listeners
 * to MediaQueryList objects.
 *
 * Adapted from https://github.com/paulirish/matchMedia.js with the addition
 * of addListener and removeListener. The polyfill referenced above uses
 * polling to trigger registered listeners on matchMedia tests.
 * This polyfill triggers tests on window resize and orientationchange.
 */
window.matchMedia=window.matchMedia||function(e,t){"use strict";function a(){u={width:t.innerWidth||e.documentElement.clientWidth,height:t.innerHeight||e.documentElement.clientHeight};o={}}function f(e){this.media=e;this.matches=false;if(o.hasOwnProperty(e)){this.matches=o[e]}else{this.check.call(this);o[e]=this.matches}}function l(e,n){var r,i;return function(){var s=this;var o=arguments;var u=function(){r=null;i=e.apply(s,o)};t.clearTimeout(r);r=t.setTimeout(u,n);return i}}var n=e.documentElement;var r=n.firstElementChild||n.firstChild;var i=e.createElement("body");var s=e.createElement("div");s.id="mq-test-1";s.style.cssText="position:absolute;top:-100em";i.style.background="none";i.appendChild(s);var o={};var u={width:t.innerWidth||e.documentElement.clientWidth,height:t.innerHeight||e.documentElement.clientHeight};if("addEventListener"in t){t.addEventListener("resize",a);t.addEventListener("orientationchange",a)}else if("attachEvent"in t){t.attachEvent("onresize",a);t.attachEvent("onorientationchange",a)}f.prototype={listeners:[],check:function(){var e;s.innerHTML='Â­<style media="'+this.media+'"> #mq-test-1 {width: 42px;}</style>';n.insertBefore(i,r);e=s.offsetWidth===42;n.removeChild(i);this.matches=e},addListener:function(e){var n=function(e,t){return function(){var n=e.matches;e.check();if(n!=e.matches){t.call(e,e)}}}(this,l(e,250));this.listeners.push({callback:e,handler:n});if("addEventListener"in t){t.addEventListener("resize",n);t.addEventListener("orientationchange",n)}else if("attachEvent"in t){t.attachEvent("onresize",n);t.attachEvent("onorientationchange",n)}},removeListener:function(e){for(var n=0,r=this.listeners;n<r.length;n++){if(r[n].callback===e){if("removeEventListener"in t){t.removeEventListener("resize",r[n].handler);t.removeEventListener("orientationchange",r[n].handler)}else if("detachEvent"in t){t.detachEvent("onresize",r[n].handler);t.detachEvent("onorientationchange",r[n].handler)}r.splice(n,1)}}}};return function(e){return new f(e)}}(document,window);(function(e,t,n){"use strict";n.behaviors.omegaMediaQueryClasses={handler:function(t,n){if(n.matches){e("body").removeClass(t+"-inactive").addClass(t+"-active")}else{e("body").removeClass(t+"-active").addClass(t+"-inactive")}},attach:function(n,r){var i=this;var s=r.omega||{};var o=s.mediaQueries||{};e("body",n).once("omega-mediaqueries",function(){e.each(o,function(e,n){var r=t.matchMedia(n);i.handler(e,r);r.addListener(function(t){i.handler(e,t)})})})}};e.matchmedia=function(e){return t.matchMedia(e)};var r=e.event.special.mediaquery={objects:{},handler:function(e){return function(t){t.applies=t.matches;e.call(t,t)}},add:function(e){r.objects[e.guid]=t.matchMedia(e.data);r.objects[e.guid].addListener(r.handler(e.handler))},remove:function(e){r.objects[e.guid].removeListener(r.handler(e.handler))}};e.fn.mediaquery=function(t,n){return e(this).bind("mediaquery",t,n)}})(jQuery,window,Drupal)
